---
description: 
globs: 
alwaysApply: true
---
# Mt Rabat - Project Architecture Guide

## Project Overview
This is a Next.js 14+ project with TypeScript, Tailwind CSS, and Sanity CMS for a Danish company. The project uses the App Router and follows functional programming principles.

## Project Structure

### Frontend Architecture
- **Entry Point**: [frontend/app/layout.tsx](mdc:frontend/app/layout.tsx) - Root layout
- **Homepage**: [frontend/app/page.tsx](mdc:frontend/app/page.tsx) - Main landing page
- **Components**: [frontend/app/components/](mdc:frontend/app/components) - Reusable UI components
- **API Routes**: [frontend/app/api/](mdc:frontend/app/api) - Next.js API endpoints
- **Global Styles**: [frontend/app/globals.css](mdc:frontend/app/globals.css) - Tailwind and global CSS

### Sanity CMS Integration
- **Client Config**: [frontend/sanity/lib/client.ts](mdc:frontend/sanity/lib/client.ts) - Sanity client setup
- **API Helpers**: [frontend/sanity/lib/api.ts](mdc:frontend/sanity/lib/api.ts) - Data fetching functions
- **Safe Data Fetching**: [frontend/sanity/lib/safeDataFetching.ts](mdc:frontend/sanity/lib/safeDataFetching.ts) - Error handling wrapper
- **Validation**: [frontend/utils/contentValidation.ts](mdc:frontend/utils/contentValidation.ts) - Zod schemas and validation
- **Studio**: [studio/](mdc:studio) - Sanity Studio configuration
- **Schema**: [studio/src/schemaTypes/](mdc:studio/src/schemaTypes) - Content models

## Danish Route Structure
The site uses Danish URLs:
- `/galleri` - Gallery page
- `/kompetencer` - Competencies/Skills page  
- `/kontakt` - Contact page
- `/om-os` - About Us page
- `/ydelser` - Services page

## Content Management Strategy
- **Singletons**: Homepage, Gallery, Services, Contact pages - one instance per type
- **Documents**: Page, Post, Person - multiple instances for general content and blog
- **Objects**: Link, InfoSection, CallToAction, BlockContent - reusable components

## Key Dependencies & Tools
- **Framework**: Next.js 14+ with App Router
- **Styling**: Tailwind CSS
- **CMS**: Sanity
- **Language**: TypeScript
- **Validation**: Zod for runtime validation
- **Package Manager**: pnpm
- **Deployment**: Vercel (based on [vercel.json](mdc:frontend/vercel.json))

## Development Commands
- `pnpm dev` - Start both frontend and studio
- `pnpm --filter frontend dev` - Frontend only
- `pnpm --filter studio dev` - Studio only
- `pnpm run typegen` - Generate TypeScript types from schema
- `pnpm lint` - ESLint checking
- `pnpm build` - Production build
